------ Run test started ------
Running test cases in debug configuration
UT01ConstructorV1: BoundedSequence1();
	outgoing: s1 = ([0,0,0,0,0],0)
UT02ClearV1: s1.clear();
	incoming: s1 = ([0,0,0,0,0],0)
	outgoing: s1 = ([0,0,0,0,0],0)
UT02ClearV2: s1.clear();
	incoming: s1 = ([33,0,0,0,0],1)
	outgoing: s1 = ([0,0,0,0,0],0)
UT03TransferFromV1: s1.transferFrom(s2);
	incoming: s1 = ([0,0,0,0,0],0) and s2 = ([0,0,0,0,0],0)
	outgoing: s1 = ([0,0,0,0,0],0) and s2 = ([0,0,0,0,0],0)
UT03TransferFromV2: s1.transferFrom(s2);
	incoming: s1 = ([0,0,0,0,0],0) and s2 = ([44,0,0,0,0],1)
	outgoing: s1 = ([44,0,0,0,0],1) and s2 = ([0,0,0,0,0],0)
UT03TransferFromV3: s1.transferFrom(s2);
	incoming: s1s rep = ([55,0,0,0,0],1) and s2 = ([0,0,0,0,0],0)
	outgoing: s1s rep = ([0,0,0,0,0],0) and s2 = ([0,0,0,0,0],0)
UT03TransferFromV4: s1.transferFrom(s2);
	incoming: s1 = ([10,0,0,0,0],1) and s2 = ([22,0,0,0,0],1)
	outgoing: s1 = ([22,0,0,0,0],1) and s2 = ([0,0,0,0,0],0)
UT04AssignmentV1: s1 = s2;
	incoming: s1  ([0,0,0,0,0],0) and s2  ([0,0,0,0,0],0)
	outgoing: s1  ([0,0,0,0,0],0) and s2  ([0,0,0,0,0],0)
UT04AssignmentV2: s1 = s2;
	incoming: s1 = ([0,0,0,0,0],0) and s2 = ([27,0,0,0,0],1)
	outgoing: s1 = ([27,0,0,0,0],1) and s2 = ([27,0,0,0,0],1)
UT04AssignmentV3: s1 = s2;
	incoming: s1 = ([10,0,0,0,0],1) and s2 = ([0,0,0,0,0],0)
	outgoing: s1 = ([0,0,0,0,0],0) and s2 = ([0,0,0,0,0],0)
UT04AssignmentV4: s1 = s2;
	incoming: s1 = ([10,0,0,0,0],1) and s2 = ([37,0,0,0,0],1)
	outgoing: s1 = ([37,0,0,0,0],1) and s2 = ([37,0,0,0,0],1)
UT05AddV1: s1.add(j, k);
	incoming: s1 = ([0,0,0,0,0],0) and j = 0 and k = 15
	outgoing: s1 = ([15,0,0,0,0],1) and j = 0 and k = 0
UT05AddV2: s1.add(j, k);
	incoming: s1 = ([15,0,0,0,0],1) and j = 0 and k = 25
	outgoing: s1 = ([25,15,0,0,0],2) and j = 0 and k = 0
UT05AddV3: s1.add(1, k);
	incoming: s1 = ([15,0,0,0,0],1) and j = 1 and k = 25
	outgoing: s1 = ([15,25,0,0,0],2) and j = 1 and k = 0
UT05AddV4: s1.add(1, k);
	incoming: s1 = ([15,25,0,0,0],2) and j = 1 and k = 20
	outgoing: s1 = ([15,20,25,0,0],3) and j = 1 and k = 0
UT06RemoveV1: s1.remove(j, k);
	incoming: s1 = ([77,0,0,0,0],1) and j = 0 and k = 0
	outgoing: s1 = ([0,0,0,0,0],0) and j = 0 and k = 77
UT06RemoveV2: s1.remove(j, k);
	incoming: s1 = ([11,33,55,77,99],5) and j = 4 and k = 0
	outgoing: s1 = ([11,33,55,77,0],4) and j = 4 and k = 99
UT06RemoveV3: s1.remove(j, k);
	incoming: s1 = ([11,33,55,77,99],5) and j = 2 and k = 0
	outgoing: s1 = ([11,33,77,99,0],4) and j = 2 and k = 55
UT06RemoveV4: s1.remove(j, k);
	incoming: s1 = ([11,33,55,77,99],5) and j = 0 and k = 0
	outgoing: s1 = ([33,55,77,99,0],4) and j = 0 and k = 11
UT07ReplaceEntryV1: s1.replaceEntry(j, k);
	incoming: s1 = ([77,0,0,0,0],1) and j = 0 and k = 8
	outgoing: s1 = ([8,0,0,0,0],1) and j = 0 and k = 77
UT07ReplaceEntryV2: s1.replaceEntry(j, k);
	incoming: s1 = ([11,33,55,77,99],5) and j = 4 and k = 8
	outgoing: s1 = ([11,33,55,77,8],5) and j = 4 and k = 99
UT07ReplaceEntryV3: s1.replaceEntry(j, k);
	incoming: s1 = ([8,0,0,0,0],1) and j = 2 and k = 8
	outgoing: s1 = ([11,33,8,77,99],5) and j = 2 and k = 55
UT07ReplaceEntryV4: s1.replaceEntry(j, k);
	incoming: s1 = ([11,33,55,77,99],5) and j = 0 and k = 8
	outgoing: s1 = ([8,33,55,77,99],5) and j = 0 and k = 11
UT08EntryV1: s1.entry(j);
	incoming: s1 = ([77,0,0,0,0],1) and j = 0
	outgoing: s1 = ([77,0,0,0,0],1) and j = 0
UT08EntryV2: s1.entry(j);
	incoming: s1 = ([11,33,55,77,99],5) and j = 4
	outgoing: s1 = ([11,33,55,77,99],5) and j = 4
UT08EntryV3: s1.entry(j);
	incoming: s1 = ([11,33,55,77,99],5) and j = 2
	outgoing: s1 = ([11,33,55,77,99],5) and j = 2
UT08EntryV4: s1.entry(j);
	incoming: s1 = ([11,33,55,77,99],5) and j = 0
	outgoing: s1 = ([11,33,55,77,99],5) and j = 0
UT09AppendV1: s1.append(s2);
	incoming: s1 = ([0,0,0,0,0],0) and s2 = ([0,0,0,0,0],0)
	outgoing: s1 = ([0,0,0,0,0],0) and s2 = ([0,0,0,0,0],0)
UT09AppendV2: s1.append(s2);
	incoming: s1 = ([0,0,0,0,0],0) and s2 = ([44,0,0,0,0],1)
	outgoing: s1 = ([44,0,0,0,0],1) and s2 = ([0,0,0,0,0],0)
UT09AppendV3: s1.append(s2);
	incoming: s1 = ([55,0,0,0,0],1) and s2 = ([0,0,0,0,0],0)
	outgoing: s1 = ([55,0,0,0,0],1) and s2 = ([0,0,0,0,0],0)
UT09AppendV4: s1.append(s2);
	incoming: s1 = ([10,0,0,0,0],1) and s2 = ([22,0,0,0,0],1)
	outgoing: s1 = ([10,22,0,0,0],2) and s2 = ([0,0,0,0,0],0)
UT10SplitV1: s1.split(j, s2);
	incoming: s1 = ([0,0,0,0,0],0) and s2 = ([0,0,0,0,0],0) and j = 0
	outgoing: s1 = ([0,0,0,0,0],0) and s2 = ([0,0,0,0,0],0) and j = 0
UT10SplitV2: s1.split(j, s2);
	incoming: s1 = ([11,33,55,77,99],5) and s2 = ([0,0,0,0,0],0) and j = 0
	outgoing: s1 = ([0,0,0,0,0],0) and s2 = ([11,33,55,77,99],5) and j = 0
UT10SplitV3: s1.split(j, s2);
	incoming: s1 = ([11,33,55,77,99],5) and s2 = ([0,0,0,0,0],0) and j = 2
	outgoing: s1 = ([11,33,0,0,0],2) and s2 = ([55,77,99,0,0],3) and j = 2
UT10SplitV4: s1.split(j, s2);
	incoming: s1 = ([11,33,55,77,99],5) and s2 = ([0,0,0,0,0],0) and j = 0
	outgoing: s1 = ([0,0,0,0,0],0) and s2 = ([11,33,55,77,99],5) and j = 0
UT10SplitV5: s1.split(j, s2);
	incoming: s1 = ([11,33,55,77,99],5) and s2 = <100> and j = 3
	outgoing: s1 = ([11,33,55,0,0],3) and s2 = ([77,99,0,0,0],2) and j = 3
UT11LengthV1: s1.length();
	incoming: s1 = ([0,0,0,0,0],0)
	outgoing: s1 = ([0,0,0,0,0],0)
UT11LengthV2: s1.length();
	incoming: s1 = ([95,0,0,0,0],1)
	outgoing: s1 = ([95,0,0,0,0],1)
UT11LengthV3: s1.length();
	incoming: s1 = ([11,33,55,77,99],5)
	outgoing: s1 = ([11,33,55,77,99],5)
UT12RemainingCapacityV1: s1.remainingCapacity();
	incoming: s1 = ([0,0,0,0,0],0)
	outgoing: s1 = ([0,0,0,0,0],0)
UT12RemainingCapacityV2: s1.remainingCapacity();
	incoming: s1 = ([95,0,0,0,0],1)
	outgoing: s1 = ([95,0,0,0,0],1)
UT12RemainingCapacityV3: s1.remainingCapacity();
	incoming: s1 = ([11,33,55,77,99],5)
	outgoing: s1 = ([11,33,55,77,99],5)
========== Run test finished: 42 run (0:00:00.1477192) ==========
